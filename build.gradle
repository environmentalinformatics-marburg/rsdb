// gradle version 7.4.2

plugins {
  id 'org.kordamp.gradle.markdown' version '2.2.0' // https://github.com/aalmiray/markdown-gradle-plugin
  id "com.github.ben-manes.versions" version '0.43.0' // update check task: dependencyUpdates  https://github.com/ben-manes/gradle-versions-plugin
}

// check for updates:
//gradle dependencyUpdates

// list (transitive) dependencies
//gradle dependencies

// upgrade gradle wrapper
//./gradlew wrapper --gradle-version=7.4.2

def isNonStable = { String version ->
  return version.contains('alpha') || version.contains('beta') 
}

dependencyUpdates {
  rejectVersionIf {  // reject all non stable versions
    isNonStable(it.candidate.version)
  }
}

markdownToHtml {
	sourceDir file('webfiles')
	outputDir file('package/webfiles')
}

apply plugin: 'java'
apply plugin: 'eclipse'
compileJava.options.encoding = 'UTF-8'

//remove gdal dependency if loaded in eclipse for manual gdal library specification
eclipse {
  classpath {
    file {
      whenMerged { classpath ->
        classpath.entries.removeIf { it instanceof org.gradle.plugins.ide.eclipse.model.Library && it.moduleVersion.toString() == 'org.gdal:gdal:2.2.0' }
      }
    }
  }
}

repositories {
    mavenCentral()
    
    /*maven { // needed for compile group: 'com.github.aelstad', name: 'keccakj', version: '1.1.0', server not always reachable
      url 'https://repository.mulesoft.org/nexus/content/repositories/public'
    }*/
    
    flatDir { // local jar files, keccakj
       dirs 'lib'
   	}
}

dependencies {
	implementation group: 'org.tinylog', name: 'tinylog-impl', version: '2.6.2'
	runtimeOnly group: 'org.tinylog', name: 'slf4j-tinylog', version: '2.6.2'
  	
  	implementation group: 'org.mapdb', name: 'mapdb', version: '2.0-beta13' // warning: newer versions v3.x do break storage layout
  	
  	implementation group: 'org.json', name: 'json', version: '20231013'
  	implementation group: 'org.yaml', name: 'snakeyaml', version: '1.33'  // TODO: check compatibility with newer version 2.x
  	implementation group: 'com.opencsv', name: 'opencsv', version: '5.8'  	
  	implementation group: 'com.github.mreutegg', name: 'laszip4j', version: '0.17'
  	implementation group: 'ar.com.hjg', name: 'pngj', version: '2.1.0'
  	implementation group: 'com.samskivert', name: 'jmustache', version: '1.15'	
  	
  	implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
  	implementation group: 'com.mkobos', name: 'pca_transform', version: '1.0.2'
  	
  	implementation group: 'com.googlecode.javaewah', name: 'JavaEWAH', version: '1.2.3'  	
  	implementation group: 'org.xerial.snappy', name: 'snappy-java', version: '1.1.10.5' // caution: newer versions may break storage layout (last tested: 1.1.7.7)
    implementation group: 'me.lemire.integercompression', name: 'JavaFastPFOR', version: '0.1.11' // data format changed from 0.1.11 to 0.1.12  	
    implementation group: 'me.lemire.integercompression', name: 'JavaFastPFOR', version: '0.1.12' // caution: newer versions may break storage layout
  	implementation group: 'com.github.luben', name: 'zstd-jni', version: '1.5.5-10' // caution: newer versions may break storage layout (last tested: 1.4.5-6)
  	
  	implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.9.3' // caution: newer versions may break with generated DSL Java source files
  	
	implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '11.0.18' // keep v11.x, newer Java version is needed for v12.x
	implementation group: 'org.eclipse.jetty', name: 'jetty-security', version: '11.0.18' // keep v11.x, newer Java version is needed for v12.x
	implementation group: 'org.eclipse.jetty.http2', name: 'http2-server', version: '11.0.18' // keep v11.x, newer Java version is needed for v12.x
	implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-java-server', version: '11.0.18' // keep v11.x, newer Java version is needed for v12.x
	implementation group: 'org.eclipse.jetty', name: 'jetty-client', version: '11.0.18' // keep v11.x, newer Java version is needed for v12.x
	
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // TODO: check for breaking changes in v0.12.x
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // TODO: check for breaking changes in v0.12.x
    runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.11.5' // TODO: check for breaking changes in v0.12.x	
	
	compileOnly group: 'org.gdal', name: 'gdal', version: '2.2.0' // compileOnly because gdal library from executing system is needed; caution: newer versions may break compatibility
	implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.19.0'
	implementation group: 'org.locationtech.proj4j', name: 'proj4j', version: '1.3.0'
	implementation group: 'org.locationtech.proj4j', name: 'proj4j-epsg', version: '1.3.0'	
	
	//implementation group: 'org.imintel', name: 'mbtiles4j', version: '1.0.6' // mbtiles currently not used
	
	//implementation group: 'com.github.aelstad', name: 'keccakj', version: '1.1.0' // server not always reachable
	
	implementation group: 'net.postgis', name: 'postgis-jdbc', version: '2021.1.0'			
}

sourceSets.main.java.srcDir 'src'
sourceSets.main.java.srcDir 'dsl/generated-sources'
sourceSets.main.java.srcDir 'src_testing'

jar {
	from file('src/tinylog.properties')
	destinationDirectory = project.layout.projectDirectory.dir('package')
	
	manifest {
		String classPathFiles = "";
		for(java.io.File file : files(configurations.runtimeClasspath)) {
			classPathFiles += "lib/"+file.getName()+" "; 
		}
		//println("the class path: "+classPathFiles);	
	
        attributes 	'Built-Date': new Date(),
					'Built-JDK': System.getProperty('java.version'),
					'Main-Class': 'run.Terminal',
					'Class-Path': classPathFiles
    }
}

compileJava   {
  sourceCompatibility = "1.8"
  targetCompatibility = "1.8"
}

tasks.withType(JavaCompile){
    //options.deprecation = true
	//options.listFiles = true
	//options.verbose = true
}

task clean_package(type: Delete) {
  delete 'package'
}

task copy_lib(type: Copy) {
	from files(configurations.runtimeClasspath)
    into 'package/lib'
}

task copy_add(type: Copy) {
	from fileTree('add')
	into 'package'
}

task copy_webcontent(type: Copy) {
	from fileTree('webcontent')
	into 'package/webcontent'
}

task copy_webfiles(type: Copy) {
	from fileTree('webfiles')
	into 'package/webfiles'
}

task copy_mustache(type: Copy) {
	from fileTree('mustache')
	into 'package/mustache'
}

task copy_webfiles_with_markdown(dependsOn: markdownToHtml) { //convert markdown to html and copy all other files
}

task copy_build(type: Copy, dependsOn: [jar]) {
	from fileTree('build/libs')
	into 'package'
}

task _package(dependsOn:[ clean_package, copy_build, copy_lib, copy_webcontent, copy_webfiles_with_markdown, copy_mustache, copy_add ]) {
	group = 'project' 
}